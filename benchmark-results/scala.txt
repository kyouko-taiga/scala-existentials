# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkExistential
# Parameters: (classCount = 2, valueCount = 1000000)

# Run progress: 0.00% complete, ETA 00:00:00
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 21961.661 us/op
# Warmup Iteration   2: 17614.234 us/op
# Warmup Iteration   3: 6223.378 us/op
# Warmup Iteration   4: 7153.450 us/op
# Warmup Iteration   5: 5075.425 us/op
# Warmup Iteration   6: 7404.345 us/op
# Warmup Iteration   7: 7699.104 us/op
# Warmup Iteration   8: 5995.780 us/op
# Warmup Iteration   9: 5781.075 us/op
# Warmup Iteration  10: 5908.029 us/op
Iteration   1: 6952.095 us/op
Iteration   2: 5939.328 us/op
Iteration   3: 7256.648 us/op
Iteration   4: 6826.282 us/op
Iteration   5: 6498.052 us/op
Iteration   6: 5207.804 us/op
Iteration   7: 5965.424 us/op
Iteration   8: 7411.311 us/op
Iteration   9: 6064.250 us/op
Iteration  10: 6939.981 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkExistential":
  N = 10
  mean =   6506.118 ±(99.9%) 1053.109 us/op

  Histogram, us/op:
    [5000.000, 5250.000) = 1 
    [5250.000, 5500.000) = 0 
    [5500.000, 5750.000) = 0 
    [5750.000, 6000.000) = 2 
    [6000.000, 6250.000) = 1 
    [6250.000, 6500.000) = 1 
    [6500.000, 6750.000) = 0 
    [6750.000, 7000.000) = 3 
    [7000.000, 7250.000) = 0 
    [7250.000, 7500.000) = 2 
    [7500.000, 7750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   5207.804 us/op
     p(50.0000) =   6662.167 us/op
     p(90.0000) =   7395.845 us/op
     p(95.0000) =   7411.311 us/op
     p(99.0000) =   7411.311 us/op
     p(99.9000) =   7411.311 us/op
     p(99.9900) =   7411.311 us/op
     p(99.9990) =   7411.311 us/op
     p(99.9999) =   7411.311 us/op
    p(100.0000) =   7411.311 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkExistential
# Parameters: (classCount = 4, valueCount = 1000000)

# Run progress: 4.55% complete, ETA 00:00:19
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 34198.957 us/op
# Warmup Iteration   2: 21175.889 us/op
# Warmup Iteration   3: 14551.415 us/op
# Warmup Iteration   4: 6132.441 us/op
# Warmup Iteration   5: 4906.394 us/op
# Warmup Iteration   6: 5037.834 us/op
# Warmup Iteration   7: 4974.788 us/op
# Warmup Iteration   8: 4935.364 us/op
# Warmup Iteration   9: 5753.925 us/op
# Warmup Iteration  10: 5731.424 us/op
Iteration   1: 5455.339 us/op
Iteration   2: 5238.201 us/op
Iteration   3: 5108.389 us/op
Iteration   4: 5733.646 us/op
Iteration   5: 5614.555 us/op
Iteration   6: 5249.896 us/op
Iteration   7: 5488.025 us/op
Iteration   8: 5817.245 us/op
Iteration   9: 5665.694 us/op
Iteration  10: 5879.324 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkExistential":
  N = 10
  mean =   5525.031 ±(99.9%) 396.819 us/op

  Histogram, us/op:
    [5100.000, 5150.000) = 1 
    [5150.000, 5200.000) = 0 
    [5200.000, 5250.000) = 2 
    [5250.000, 5300.000) = 0 
    [5300.000, 5350.000) = 0 
    [5350.000, 5400.000) = 0 
    [5400.000, 5450.000) = 0 
    [5450.000, 5500.000) = 2 
    [5500.000, 5550.000) = 0 
    [5550.000, 5600.000) = 0 
    [5600.000, 5650.000) = 1 
    [5650.000, 5700.000) = 1 
    [5700.000, 5750.000) = 1 
    [5750.000, 5800.000) = 0 
    [5800.000, 5850.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   5108.389 us/op
     p(50.0000) =   5551.290 us/op
     p(90.0000) =   5873.116 us/op
     p(95.0000) =   5879.324 us/op
     p(99.0000) =   5879.324 us/op
     p(99.9000) =   5879.324 us/op
     p(99.9900) =   5879.324 us/op
     p(99.9990) =   5879.324 us/op
     p(99.9999) =   5879.324 us/op
    p(100.0000) =   5879.324 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkExistential
# Parameters: (classCount = 6, valueCount = 1000000)

# Run progress: 9.09% complete, ETA 00:00:17
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 30109.540 us/op
# Warmup Iteration   2: 19601.154 us/op
# Warmup Iteration   3: 18729.486 us/op
# Warmup Iteration   4: 9916.733 us/op
# Warmup Iteration   5: 7907.171 us/op
# Warmup Iteration   6: 6772.978 us/op
# Warmup Iteration   7: 5843.996 us/op
# Warmup Iteration   8: 8999.568 us/op
# Warmup Iteration   9: 7832.269 us/op
# Warmup Iteration  10: 11847.189 us/op
Iteration   1: 13420.009 us/op
Iteration   2: 10059.102 us/op
Iteration   3: 8380.446 us/op
Iteration   4: 6871.389 us/op
Iteration   5: 5749.214 us/op
Iteration   6: 5753.419 us/op
Iteration   7: 5610.856 us/op
Iteration   8: 5807.863 us/op
Iteration   9: 9034.777 us/op
Iteration  10: 7132.385 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkExistential":
  N = 10
  mean =   7781.946 ±(99.9%) 3805.077 us/op

  Histogram, us/op:
    [ 5000.000,  5500.000) = 0 
    [ 5500.000,  6000.000) = 4 
    [ 6000.000,  6500.000) = 0 
    [ 6500.000,  7000.000) = 1 
    [ 7000.000,  7500.000) = 1 
    [ 7500.000,  8000.000) = 0 
    [ 8000.000,  8500.000) = 1 
    [ 8500.000,  9000.000) = 0 
    [ 9000.000,  9500.000) = 1 
    [ 9500.000, 10000.000) = 0 
    [10000.000, 10500.000) = 1 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 0 
    [11500.000, 12000.000) = 0 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   5610.856 us/op
     p(50.0000) =   7001.887 us/op
     p(90.0000) =  13083.918 us/op
     p(95.0000) =  13420.009 us/op
     p(99.0000) =  13420.009 us/op
     p(99.9000) =  13420.009 us/op
     p(99.9900) =  13420.009 us/op
     p(99.9990) =  13420.009 us/op
     p(99.9999) =  13420.009 us/op
    p(100.0000) =  13420.009 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkExistential
# Parameters: (classCount = 8, valueCount = 1000000)

# Run progress: 13.64% complete, ETA 00:00:16
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 30462.921 us/op
# Warmup Iteration   2: 21860.396 us/op
# Warmup Iteration   3: 12482.998 us/op
# Warmup Iteration   4: 10338.830 us/op
# Warmup Iteration   5: 6051.024 us/op
# Warmup Iteration   6: 6188.678 us/op
# Warmup Iteration   7: 6299.810 us/op
# Warmup Iteration   8: 6857.477 us/op
# Warmup Iteration   9: 6826.698 us/op
# Warmup Iteration  10: 7341.171 us/op
Iteration   1: 7047.566 us/op
Iteration   2: 7377.877 us/op
Iteration   3: 7229.838 us/op
Iteration   4: 7633.929 us/op
Iteration   5: 6624.472 us/op
Iteration   6: 6548.255 us/op
Iteration   7: 6967.540 us/op
Iteration   8: 7165.396 us/op
Iteration   9: 7197.369 us/op
Iteration  10: 6826.449 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkExistential":
  N = 10
  mean =   7061.869 ±(99.9%) 504.971 us/op

  Histogram, us/op:
    [6000.000, 6125.000) = 0 
    [6125.000, 6250.000) = 0 
    [6250.000, 6375.000) = 0 
    [6375.000, 6500.000) = 0 
    [6500.000, 6625.000) = 2 
    [6625.000, 6750.000) = 0 
    [6750.000, 6875.000) = 1 
    [6875.000, 7000.000) = 1 
    [7000.000, 7125.000) = 1 
    [7125.000, 7250.000) = 3 
    [7250.000, 7375.000) = 0 
    [7375.000, 7500.000) = 1 
    [7500.000, 7625.000) = 0 
    [7625.000, 7750.000) = 1 
    [7750.000, 7875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   6548.255 us/op
     p(50.0000) =   7106.481 us/op
     p(90.0000) =   7608.324 us/op
     p(95.0000) =   7633.929 us/op
     p(99.0000) =   7633.929 us/op
     p(99.9000) =   7633.929 us/op
     p(99.9900) =   7633.929 us/op
     p(99.9990) =   7633.929 us/op
     p(99.9999) =   7633.929 us/op
    p(100.0000) =   7633.929 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkExistential
# Parameters: (classCount = 10, valueCount = 1000000)

# Run progress: 18.18% complete, ETA 00:00:15
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 31402.780 us/op
# Warmup Iteration   2: 16492.301 us/op
# Warmup Iteration   3: 14001.812 us/op
# Warmup Iteration   4: 14259.619 us/op
# Warmup Iteration   5: 11739.704 us/op
# Warmup Iteration   6: 12417.786 us/op
# Warmup Iteration   7: 13772.593 us/op
# Warmup Iteration   8: 17505.111 us/op
# Warmup Iteration   9: 11471.632 us/op
# Warmup Iteration  10: 11185.596 us/op
Iteration   1: 9711.720 us/op
Iteration   2: 9292.498 us/op
Iteration   3: 9264.049 us/op
Iteration   4: 8996.889 us/op
Iteration   5: 11663.657 us/op
Iteration   6: 9099.733 us/op
Iteration   7: 8728.995 us/op
Iteration   8: 9321.714 us/op
Iteration   9: 11446.659 us/op
Iteration  10: 13555.200 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkExistential":
  N = 10
  mean =  10108.111 ±(99.9%) 2385.174 us/op

  Histogram, us/op:
    [ 8000.000,  8500.000) = 0 
    [ 8500.000,  9000.000) = 2 
    [ 9000.000,  9500.000) = 4 
    [ 9500.000, 10000.000) = 1 
    [10000.000, 10500.000) = 0 
    [10500.000, 11000.000) = 0 
    [11000.000, 11500.000) = 1 
    [11500.000, 12000.000) = 1 
    [12000.000, 12500.000) = 0 
    [12500.000, 13000.000) = 0 
    [13000.000, 13500.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8728.995 us/op
     p(50.0000) =   9307.106 us/op
     p(90.0000) =  13366.046 us/op
     p(95.0000) =  13555.200 us/op
     p(99.0000) =  13555.200 us/op
     p(99.9000) =  13555.200 us/op
     p(99.9900) =  13555.200 us/op
     p(99.9990) =  13555.200 us/op
     p(99.9999) =  13555.200 us/op
    p(100.0000) =  13555.200 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkExistential
# Parameters: (classCount = 12, valueCount = 1000000)

# Run progress: 22.73% complete, ETA 00:00:14
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 23742.362 us/op
# Warmup Iteration   2: 13833.732 us/op
# Warmup Iteration   3: 8630.395 us/op
# Warmup Iteration   4: 8828.674 us/op
# Warmup Iteration   5: 10303.481 us/op
# Warmup Iteration   6: 8913.813 us/op
# Warmup Iteration   7: 8606.923 us/op
# Warmup Iteration   8: 8616.941 us/op
# Warmup Iteration   9: 10198.786 us/op
# Warmup Iteration  10: 8683.603 us/op
Iteration   1: 8616.913 us/op
Iteration   2: 10276.101 us/op
Iteration   3: 9023.023 us/op
Iteration   4: 10702.857 us/op
Iteration   5: 9552.824 us/op
Iteration   6: 8848.135 us/op
Iteration   7: 9152.652 us/op
Iteration   8: 10113.752 us/op
Iteration   9: 10234.067 us/op
Iteration  10: 9511.083 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkExistential":
  N = 10
  mean =   9603.141 ±(99.9%) 1058.805 us/op

  Histogram, us/op:
    [ 8000.000,  8250.000) = 0 
    [ 8250.000,  8500.000) = 0 
    [ 8500.000,  8750.000) = 1 
    [ 8750.000,  9000.000) = 1 
    [ 9000.000,  9250.000) = 2 
    [ 9250.000,  9500.000) = 0 
    [ 9500.000,  9750.000) = 2 
    [ 9750.000, 10000.000) = 0 
    [10000.000, 10250.000) = 2 
    [10250.000, 10500.000) = 1 
    [10500.000, 10750.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   8616.913 us/op
     p(50.0000) =   9531.954 us/op
     p(90.0000) =  10660.181 us/op
     p(95.0000) =  10702.857 us/op
     p(99.0000) =  10702.857 us/op
     p(99.9000) =  10702.857 us/op
     p(99.9900) =  10702.857 us/op
     p(99.9990) =  10702.857 us/op
     p(99.9999) =  10702.857 us/op
    p(100.0000) =  10702.857 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkExistential
# Parameters: (classCount = 14, valueCount = 1000000)

# Run progress: 27.27% complete, ETA 00:00:13
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 25827.956 us/op
# Warmup Iteration   2: 13802.582 us/op
# Warmup Iteration   3: 8548.308 us/op
# Warmup Iteration   4: 9578.343 us/op
# Warmup Iteration   5: 8608.920 us/op
# Warmup Iteration   6: 8478.552 us/op
# Warmup Iteration   7: 10175.290 us/op
# Warmup Iteration   8: 9031.092 us/op
# Warmup Iteration   9: 8488.366 us/op
# Warmup Iteration  10: 8365.098 us/op
Iteration   1: 8391.577 us/op
Iteration   2: 8388.763 us/op
Iteration   3: 10188.893 us/op
Iteration   4: 9977.908 us/op
Iteration   5: 8294.653 us/op
Iteration   6: 8781.460 us/op
Iteration   7: 9133.035 us/op
Iteration   8: 8713.066 us/op
Iteration   9: 10314.537 us/op
Iteration  10: 10172.595 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkExistential":
  N = 10
  mean =   9235.649 ±(99.9%) 1265.568 us/op

  Histogram, us/op:
    [ 8000.000,  8250.000) = 0 
    [ 8250.000,  8500.000) = 3 
    [ 8500.000,  8750.000) = 1 
    [ 8750.000,  9000.000) = 1 
    [ 9000.000,  9250.000) = 1 
    [ 9250.000,  9500.000) = 0 
    [ 9500.000,  9750.000) = 0 
    [ 9750.000, 10000.000) = 1 
    [10000.000, 10250.000) = 2 
    [10250.000, 10500.000) = 1 
    [10500.000, 10750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8294.653 us/op
     p(50.0000) =   8957.248 us/op
     p(90.0000) =  10301.973 us/op
     p(95.0000) =  10314.537 us/op
     p(99.0000) =  10314.537 us/op
     p(99.9000) =  10314.537 us/op
     p(99.9900) =  10314.537 us/op
     p(99.9990) =  10314.537 us/op
     p(99.9999) =  10314.537 us/op
    p(100.0000) =  10314.537 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkExistential
# Parameters: (classCount = 16, valueCount = 1000000)

# Run progress: 31.82% complete, ETA 00:00:12
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 28210.246 us/op
# Warmup Iteration   2: 18756.912 us/op
# Warmup Iteration   3: 8830.019 us/op
# Warmup Iteration   4: 10123.388 us/op
# Warmup Iteration   5: 8281.754 us/op
# Warmup Iteration   6: 8271.113 us/op
# Warmup Iteration   7: 7533.429 us/op
# Warmup Iteration   8: 7295.496 us/op
# Warmup Iteration   9: 7563.941 us/op
# Warmup Iteration  10: 8327.888 us/op
Iteration   1: 8278.506 us/op
Iteration   2: 8368.697 us/op
Iteration   3: 8316.487 us/op
Iteration   4: 9917.817 us/op
Iteration   5: 10206.055 us/op
Iteration   6: 9114.323 us/op
Iteration   7: 9444.122 us/op
Iteration   8: 10296.046 us/op
Iteration   9: 10130.619 us/op
Iteration  10: 8270.823 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkExistential":
  N = 10
  mean =   9234.350 ±(99.9%) 1317.438 us/op

  Histogram, us/op:
    [ 8000.000,  8250.000) = 0 
    [ 8250.000,  8500.000) = 4 
    [ 8500.000,  8750.000) = 0 
    [ 8750.000,  9000.000) = 0 
    [ 9000.000,  9250.000) = 1 
    [ 9250.000,  9500.000) = 1 
    [ 9500.000,  9750.000) = 0 
    [ 9750.000, 10000.000) = 1 
    [10000.000, 10250.000) = 2 
    [10250.000, 10500.000) = 1 
    [10500.000, 10750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   8270.823 us/op
     p(50.0000) =   9279.223 us/op
     p(90.0000) =  10287.047 us/op
     p(95.0000) =  10296.046 us/op
     p(99.0000) =  10296.046 us/op
     p(99.9000) =  10296.046 us/op
     p(99.9900) =  10296.046 us/op
     p(99.9990) =  10296.046 us/op
     p(99.9999) =  10296.046 us/op
    p(100.0000) =  10296.046 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkExistential
# Parameters: (classCount = 18, valueCount = 1000000)

# Run progress: 36.36% complete, ETA 00:00:11
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 21264.589 us/op
# Warmup Iteration   2: 14068.406 us/op
# Warmup Iteration   3: 7282.535 us/op
# Warmup Iteration   4: 7197.092 us/op
# Warmup Iteration   5: 7785.157 us/op
# Warmup Iteration   6: 9908.610 us/op
# Warmup Iteration   7: 9790.721 us/op
# Warmup Iteration   8: 8472.186 us/op
# Warmup Iteration   9: 8461.979 us/op
# Warmup Iteration  10: 9971.238 us/op
Iteration   1: 9906.031 us/op
Iteration   2: 9843.498 us/op
Iteration   3: 9942.659 us/op
Iteration   4: 9682.816 us/op
Iteration   5: 9473.423 us/op
Iteration   6: 9693.431 us/op
Iteration   7: 9864.612 us/op
Iteration   8: 8931.506 us/op
Iteration   9: 9158.090 us/op
Iteration  10: 9158.828 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkExistential":
  N = 10
  mean =   9565.489 ±(99.9%) 551.335 us/op

  Histogram, us/op:
    [ 8000.000,  8125.000) = 0 
    [ 8125.000,  8250.000) = 0 
    [ 8250.000,  8375.000) = 0 
    [ 8375.000,  8500.000) = 0 
    [ 8500.000,  8625.000) = 0 
    [ 8625.000,  8750.000) = 0 
    [ 8750.000,  8875.000) = 0 
    [ 8875.000,  9000.000) = 1 
    [ 9000.000,  9125.000) = 0 
    [ 9125.000,  9250.000) = 2 
    [ 9250.000,  9375.000) = 0 
    [ 9375.000,  9500.000) = 1 
    [ 9500.000,  9625.000) = 0 
    [ 9625.000,  9750.000) = 2 
    [ 9750.000,  9875.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   8931.506 us/op
     p(50.0000) =   9688.124 us/op
     p(90.0000) =   9938.996 us/op
     p(95.0000) =   9942.659 us/op
     p(99.0000) =   9942.659 us/op
     p(99.9000) =   9942.659 us/op
     p(99.9900) =   9942.659 us/op
     p(99.9990) =   9942.659 us/op
     p(99.9999) =   9942.659 us/op
    p(100.0000) =   9942.659 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkExistential
# Parameters: (classCount = 20, valueCount = 1000000)

# Run progress: 40.91% complete, ETA 00:00:10
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 21309.447 us/op
# Warmup Iteration   2: 11665.341 us/op
# Warmup Iteration   3: 8857.730 us/op
# Warmup Iteration   4: 10360.634 us/op
# Warmup Iteration   5: 10580.068 us/op
# Warmup Iteration   6: 10480.600 us/op
# Warmup Iteration   7: 9645.429 us/op
# Warmup Iteration   8: 10522.372 us/op
# Warmup Iteration   9: 9805.386 us/op
# Warmup Iteration  10: 9933.109 us/op
Iteration   1: 11645.686 us/op
Iteration   2: 12059.594 us/op
Iteration   3: 10630.500 us/op
Iteration   4: 10975.534 us/op
Iteration   5: 11664.477 us/op
Iteration   6: 10950.903 us/op
Iteration   7: 11201.788 us/op
Iteration   8: 10779.356 us/op
Iteration   9: 10623.895 us/op
Iteration  10: 10149.204 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkExistential":
  N = 10
  mean =  11068.094 ±(99.9%) 877.089 us/op

  Histogram, us/op:
    [10000.000, 10250.000) = 1 
    [10250.000, 10500.000) = 0 
    [10500.000, 10750.000) = 2 
    [10750.000, 11000.000) = 3 
    [11000.000, 11250.000) = 1 
    [11250.000, 11500.000) = 0 
    [11500.000, 11750.000) = 2 
    [11750.000, 12000.000) = 0 
    [12000.000, 12250.000) = 1 
    [12250.000, 12500.000) = 0 
    [12500.000, 12750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  10149.204 us/op
     p(50.0000) =  10963.218 us/op
     p(90.0000) =  12020.082 us/op
     p(95.0000) =  12059.594 us/op
     p(99.0000) =  12059.594 us/op
     p(99.9000) =  12059.594 us/op
     p(99.9900) =  12059.594 us/op
     p(99.9990) =  12059.594 us/op
     p(99.9999) =  12059.594 us/op
    p(100.0000) =  12059.594 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance
# Parameters: (classCount = 2, valueCount = 1000000)

# Run progress: 45.45% complete, ETA 00:00:09
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 8651.089 us/op
# Warmup Iteration   2: 11638.988 us/op
# Warmup Iteration   3: 5780.958 us/op
# Warmup Iteration   4: 3052.294 us/op
# Warmup Iteration   5: 3026.685 us/op
# Warmup Iteration   6: 3174.483 us/op
# Warmup Iteration   7: 2927.368 us/op
# Warmup Iteration   8: 2994.767 us/op
# Warmup Iteration   9: 3521.822 us/op
# Warmup Iteration  10: 4175.472 us/op
Iteration   1: 4221.939 us/op
Iteration   2: 3321.823 us/op
Iteration   3: 3669.709 us/op
Iteration   4: 3172.214 us/op
Iteration   5: 3028.505 us/op
Iteration   6: 3546.412 us/op
Iteration   7: 3066.438 us/op
Iteration   8: 3014.087 us/op
Iteration   9: 2939.963 us/op
Iteration  10: 2935.391 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance":
  N = 10
  mean =   3291.648 ±(99.9%) 624.587 us/op

  Histogram, us/op:
    [2000.000, 2250.000) = 0 
    [2250.000, 2500.000) = 0 
    [2500.000, 2750.000) = 0 
    [2750.000, 3000.000) = 2 
    [3000.000, 3250.000) = 4 
    [3250.000, 3500.000) = 1 
    [3500.000, 3750.000) = 2 
    [3750.000, 4000.000) = 0 
    [4000.000, 4250.000) = 1 
    [4250.000, 4500.000) = 0 
    [4500.000, 4750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2935.391 us/op
     p(50.0000) =   3119.326 us/op
     p(90.0000) =   4166.716 us/op
     p(95.0000) =   4221.939 us/op
     p(99.0000) =   4221.939 us/op
     p(99.9000) =   4221.939 us/op
     p(99.9900) =   4221.939 us/op
     p(99.9990) =   4221.939 us/op
     p(99.9999) =   4221.939 us/op
    p(100.0000) =   4221.939 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance
# Parameters: (classCount = 4, valueCount = 1000000)

# Run progress: 50.00% complete, ETA 00:00:08
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 10439.447 us/op
# Warmup Iteration   2: 9287.037 us/op
# Warmup Iteration   3: 6568.242 us/op
# Warmup Iteration   4: 2492.449 us/op
# Warmup Iteration   5: 2330.732 us/op
# Warmup Iteration   6: 2613.065 us/op
# Warmup Iteration   7: 2420.169 us/op
# Warmup Iteration   8: 2674.173 us/op
# Warmup Iteration   9: 2447.141 us/op
# Warmup Iteration  10: 2478.051 us/op
Iteration   1: 2525.748 us/op
Iteration   2: 2804.333 us/op
Iteration   3: 2705.930 us/op
Iteration   4: 2803.266 us/op
Iteration   5: 2713.443 us/op
Iteration   6: 2758.581 us/op
Iteration   7: 2585.023 us/op
Iteration   8: 2619.727 us/op
Iteration   9: 2638.819 us/op
Iteration  10: 2652.165 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance":
  N = 10
  mean =   2680.704 ±(99.9%) 140.323 us/op

  Histogram, us/op:
    [2500.000, 2525.000) = 0 
    [2525.000, 2550.000) = 1 
    [2550.000, 2575.000) = 0 
    [2575.000, 2600.000) = 1 
    [2600.000, 2625.000) = 1 
    [2625.000, 2650.000) = 1 
    [2650.000, 2675.000) = 1 
    [2675.000, 2700.000) = 0 
    [2700.000, 2725.000) = 2 
    [2725.000, 2750.000) = 0 
    [2750.000, 2775.000) = 1 
    [2775.000, 2800.000) = 0 
    [2800.000, 2825.000) = 2 
    [2825.000, 2850.000) = 0 
    [2850.000, 2875.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   2525.748 us/op
     p(50.0000) =   2679.047 us/op
     p(90.0000) =   2804.226 us/op
     p(95.0000) =   2804.333 us/op
     p(99.0000) =   2804.333 us/op
     p(99.9000) =   2804.333 us/op
     p(99.9900) =   2804.333 us/op
     p(99.9990) =   2804.333 us/op
     p(99.9999) =   2804.333 us/op
    p(100.0000) =   2804.333 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance
# Parameters: (classCount = 6, valueCount = 1000000)

# Run progress: 54.55% complete, ETA 00:00:07
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 12108.716 us/op
# Warmup Iteration   2: 10047.689 us/op
# Warmup Iteration   3: 10502.158 us/op
# Warmup Iteration   4: 6231.727 us/op
# Warmup Iteration   5: 3437.190 us/op
# Warmup Iteration   6: 3041.739 us/op
# Warmup Iteration   7: 2899.926 us/op
# Warmup Iteration   8: 3077.681 us/op
# Warmup Iteration   9: 2856.448 us/op
# Warmup Iteration  10: 2961.622 us/op
Iteration   1: 3058.452 us/op
Iteration   2: 2888.897 us/op
Iteration   3: 3307.371 us/op
Iteration   4: 2968.096 us/op
Iteration   5: 3290.352 us/op
Iteration   6: 3325.389 us/op
Iteration   7: 3033.521 us/op
Iteration   8: 2977.458 us/op
Iteration   9: 3028.708 us/op
Iteration  10: 3156.470 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance":
  N = 10
  mean =   3103.471 ±(99.9%) 237.079 us/op

  Histogram, us/op:
    [2800.000, 2850.000) = 0 
    [2850.000, 2900.000) = 1 
    [2900.000, 2950.000) = 0 
    [2950.000, 3000.000) = 2 
    [3000.000, 3050.000) = 2 
    [3050.000, 3100.000) = 1 
    [3100.000, 3150.000) = 0 
    [3150.000, 3200.000) = 1 
    [3200.000, 3250.000) = 0 
    [3250.000, 3300.000) = 1 
    [3300.000, 3350.000) = 2 

  Percentiles, us/op:
      p(0.0000) =   2888.897 us/op
     p(50.0000) =   3045.987 us/op
     p(90.0000) =   3323.587 us/op
     p(95.0000) =   3325.389 us/op
     p(99.0000) =   3325.389 us/op
     p(99.9000) =   3325.389 us/op
     p(99.9900) =   3325.389 us/op
     p(99.9990) =   3325.389 us/op
     p(99.9999) =   3325.389 us/op
    p(100.0000) =   3325.389 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance
# Parameters: (classCount = 8, valueCount = 1000000)

# Run progress: 59.09% complete, ETA 00:00:07
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 14226.973 us/op
# Warmup Iteration   2: 11631.964 us/op
# Warmup Iteration   3: 10546.707 us/op
# Warmup Iteration   4: 4129.637 us/op
# Warmup Iteration   5: 3257.422 us/op
# Warmup Iteration   6: 3613.422 us/op
# Warmup Iteration   7: 3265.684 us/op
# Warmup Iteration   8: 3305.383 us/op
# Warmup Iteration   9: 3654.727 us/op
# Warmup Iteration  10: 3325.479 us/op
Iteration   1: 3387.034 us/op
Iteration   2: 3676.764 us/op
Iteration   3: 3807.479 us/op
Iteration   4: 3734.088 us/op
Iteration   5: 3744.085 us/op
Iteration   6: 3732.149 us/op
Iteration   7: 3741.522 us/op
Iteration   8: 3753.626 us/op
Iteration   9: 3711.016 us/op
Iteration  10: 3400.812 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance":
  N = 10
  mean =   3668.858 ±(99.9%) 224.649 us/op

  Histogram, us/op:
    [3300.000, 3350.000) = 0 
    [3350.000, 3400.000) = 1 
    [3400.000, 3450.000) = 1 
    [3450.000, 3500.000) = 0 
    [3500.000, 3550.000) = 0 
    [3550.000, 3600.000) = 0 
    [3600.000, 3650.000) = 0 
    [3650.000, 3700.000) = 1 
    [3700.000, 3750.000) = 5 
    [3750.000, 3800.000) = 1 
    [3800.000, 3850.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   3387.034 us/op
     p(50.0000) =   3733.119 us/op
     p(90.0000) =   3802.094 us/op
     p(95.0000) =   3807.479 us/op
     p(99.0000) =   3807.479 us/op
     p(99.9000) =   3807.479 us/op
     p(99.9900) =   3807.479 us/op
     p(99.9990) =   3807.479 us/op
     p(99.9999) =   3807.479 us/op
    p(100.0000) =   3807.479 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance
# Parameters: (classCount = 10, valueCount = 1000000)

# Run progress: 63.64% complete, ETA 00:00:06
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 13200.558 us/op
# Warmup Iteration   2: 12031.220 us/op
# Warmup Iteration   3: 11594.980 us/op
# Warmup Iteration   4: 6010.968 us/op
# Warmup Iteration   5: 4271.739 us/op
# Warmup Iteration   6: 4344.787 us/op
# Warmup Iteration   7: 4958.334 us/op
# Warmup Iteration   8: 4406.079 us/op
# Warmup Iteration   9: 4387.770 us/op
# Warmup Iteration  10: 4602.944 us/op
Iteration   1: 4637.791 us/op
Iteration   2: 4452.410 us/op
Iteration   3: 4428.246 us/op
Iteration   4: 4537.132 us/op
Iteration   5: 4375.369 us/op
Iteration   6: 4405.861 us/op
Iteration   7: 4644.972 us/op
Iteration   8: 4281.565 us/op
Iteration   9: 4786.427 us/op
Iteration  10: 4319.185 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance":
  N = 10
  mean =   4486.896 ±(99.9%) 243.739 us/op

  Histogram, us/op:
    [4200.000, 4250.000) = 0 
    [4250.000, 4300.000) = 1 
    [4300.000, 4350.000) = 1 
    [4350.000, 4400.000) = 1 
    [4400.000, 4450.000) = 2 
    [4450.000, 4500.000) = 1 
    [4500.000, 4550.000) = 1 
    [4550.000, 4600.000) = 0 
    [4600.000, 4650.000) = 2 
    [4650.000, 4700.000) = 0 
    [4700.000, 4750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   4281.565 us/op
     p(50.0000) =   4440.328 us/op
     p(90.0000) =   4772.282 us/op
     p(95.0000) =   4786.427 us/op
     p(99.0000) =   4786.427 us/op
     p(99.9000) =   4786.427 us/op
     p(99.9900) =   4786.427 us/op
     p(99.9990) =   4786.427 us/op
     p(99.9999) =   4786.427 us/op
    p(100.0000) =   4786.427 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance
# Parameters: (classCount = 12, valueCount = 1000000)

# Run progress: 68.18% complete, ETA 00:00:05
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 12663.331 us/op
# Warmup Iteration   2: 8405.282 us/op
# Warmup Iteration   3: 4836.660 us/op
# Warmup Iteration   4: 5354.497 us/op
# Warmup Iteration   5: 4426.197 us/op
# Warmup Iteration   6: 4284.475 us/op
# Warmup Iteration   7: 4293.373 us/op
# Warmup Iteration   8: 4469.750 us/op
# Warmup Iteration   9: 4883.395 us/op
# Warmup Iteration  10: 5472.997 us/op
Iteration   1: 4460.953 us/op
Iteration   2: 4989.233 us/op
Iteration   3: 4954.491 us/op
Iteration   4: 4610.514 us/op
Iteration   5: 4414.363 us/op
Iteration   6: 4882.845 us/op
Iteration   7: 4456.837 us/op
Iteration   8: 4699.425 us/op
Iteration   9: 4214.188 us/op
Iteration  10: 4567.903 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance":
  N = 10
  mean =   4625.075 ±(99.9%) 385.465 us/op

  Histogram, us/op:
    [4200.000, 4250.000) = 1 
    [4250.000, 4300.000) = 0 
    [4300.000, 4350.000) = 0 
    [4350.000, 4400.000) = 0 
    [4400.000, 4450.000) = 1 
    [4450.000, 4500.000) = 2 
    [4500.000, 4550.000) = 0 
    [4550.000, 4600.000) = 1 
    [4600.000, 4650.000) = 1 
    [4650.000, 4700.000) = 1 
    [4700.000, 4750.000) = 0 
    [4750.000, 4800.000) = 0 
    [4800.000, 4850.000) = 0 
    [4850.000, 4900.000) = 1 
    [4900.000, 4950.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   4214.188 us/op
     p(50.0000) =   4589.209 us/op
     p(90.0000) =   4985.759 us/op
     p(95.0000) =   4989.233 us/op
     p(99.0000) =   4989.233 us/op
     p(99.9000) =   4989.233 us/op
     p(99.9900) =   4989.233 us/op
     p(99.9990) =   4989.233 us/op
     p(99.9999) =   4989.233 us/op
    p(100.0000) =   4989.233 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance
# Parameters: (classCount = 14, valueCount = 1000000)

# Run progress: 72.73% complete, ETA 00:00:04
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 10278.527 us/op
# Warmup Iteration   2: 6513.906 us/op
# Warmup Iteration   3: 3689.894 us/op
# Warmup Iteration   4: 4130.687 us/op
# Warmup Iteration   5: 3507.970 us/op
# Warmup Iteration   6: 4290.845 us/op
# Warmup Iteration   7: 4052.359 us/op
# Warmup Iteration   8: 4148.083 us/op
# Warmup Iteration   9: 4273.531 us/op
# Warmup Iteration  10: 4237.501 us/op
Iteration   1: 4290.439 us/op
Iteration   2: 4762.561 us/op
Iteration   3: 4793.562 us/op
Iteration   4: 4248.308 us/op
Iteration   5: 4747.197 us/op
Iteration   6: 4827.865 us/op
Iteration   7: 5871.180 us/op
Iteration   8: 4513.364 us/op
Iteration   9: 3990.910 us/op
Iteration  10: 4524.592 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance":
  N = 10
  mean =   4656.998 ±(99.9%) 768.357 us/op

  Histogram, us/op:
    [3000.000, 3250.000) = 0 
    [3250.000, 3500.000) = 0 
    [3500.000, 3750.000) = 0 
    [3750.000, 4000.000) = 1 
    [4000.000, 4250.000) = 1 
    [4250.000, 4500.000) = 1 
    [4500.000, 4750.000) = 3 
    [4750.000, 5000.000) = 3 
    [5000.000, 5250.000) = 0 
    [5250.000, 5500.000) = 0 
    [5500.000, 5750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   3990.910 us/op
     p(50.0000) =   4635.895 us/op
     p(90.0000) =   5766.849 us/op
     p(95.0000) =   5871.180 us/op
     p(99.0000) =   5871.180 us/op
     p(99.9000) =   5871.180 us/op
     p(99.9900) =   5871.180 us/op
     p(99.9990) =   5871.180 us/op
     p(99.9999) =   5871.180 us/op
    p(100.0000) =   5871.180 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance
# Parameters: (classCount = 16, valueCount = 1000000)

# Run progress: 77.27% complete, ETA 00:00:03
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 11139.405 us/op
# Warmup Iteration   2: 10412.066 us/op
# Warmup Iteration   3: 5113.124 us/op
# Warmup Iteration   4: 3511.083 us/op
# Warmup Iteration   5: 3956.771 us/op
# Warmup Iteration   6: 3648.561 us/op
# Warmup Iteration   7: 4446.453 us/op
# Warmup Iteration   8: 4055.386 us/op
# Warmup Iteration   9: 4625.498 us/op
# Warmup Iteration  10: 4167.485 us/op
Iteration   1: 4172.172 us/op
Iteration   2: 4592.741 us/op
Iteration   3: 4113.101 us/op
Iteration   4: 4145.324 us/op
Iteration   5: 4182.202 us/op
Iteration   6: 4758.493 us/op
Iteration   7: 3979.460 us/op
Iteration   8: 4038.965 us/op
Iteration   9: 4562.092 us/op
Iteration  10: 3991.219 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance":
  N = 10
  mean =   4253.577 ±(99.9%) 421.142 us/op

  Histogram, us/op:
    [3900.000, 3950.000) = 0 
    [3950.000, 4000.000) = 2 
    [4000.000, 4050.000) = 1 
    [4050.000, 4100.000) = 0 
    [4100.000, 4150.000) = 2 
    [4150.000, 4200.000) = 2 
    [4200.000, 4250.000) = 0 
    [4250.000, 4300.000) = 0 
    [4300.000, 4350.000) = 0 
    [4350.000, 4400.000) = 0 
    [4400.000, 4450.000) = 0 
    [4450.000, 4500.000) = 0 
    [4500.000, 4550.000) = 0 
    [4550.000, 4600.000) = 2 
    [4600.000, 4650.000) = 0 
    [4650.000, 4700.000) = 0 
    [4700.000, 4750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =   3979.460 us/op
     p(50.0000) =   4158.748 us/op
     p(90.0000) =   4741.918 us/op
     p(95.0000) =   4758.493 us/op
     p(99.0000) =   4758.493 us/op
     p(99.9000) =   4758.493 us/op
     p(99.9900) =   4758.493 us/op
     p(99.9990) =   4758.493 us/op
     p(99.9999) =   4758.493 us/op
    p(100.0000) =   4758.493 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance
# Parameters: (classCount = 18, valueCount = 1000000)

# Run progress: 81.82% complete, ETA 00:00:02
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 11006.466 us/op
# Warmup Iteration   2: 10894.494 us/op
# Warmup Iteration   3: 8792.299 us/op
# Warmup Iteration   4: 4063.671 us/op
# Warmup Iteration   5: 3547.243 us/op
# Warmup Iteration   6: 3793.258 us/op
# Warmup Iteration   7: 4037.074 us/op
# Warmup Iteration   8: 4041.514 us/op
# Warmup Iteration   9: 4605.111 us/op
# Warmup Iteration  10: 4617.691 us/op
Iteration   1: 4627.101 us/op
Iteration   2: 4565.461 us/op
Iteration   3: 4422.599 us/op
Iteration   4: 4539.046 us/op
Iteration   5: 4087.078 us/op
Iteration   6: 4092.097 us/op
Iteration   7: 4457.979 us/op
Iteration   8: 4583.257 us/op
Iteration   9: 3963.135 us/op
Iteration  10: 4526.303 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance":
  N = 10
  mean =   4386.406 ±(99.9%) 368.065 us/op

  Histogram, us/op:
    [3900.000, 3950.000) = 0 
    [3950.000, 4000.000) = 1 
    [4000.000, 4050.000) = 0 
    [4050.000, 4100.000) = 2 
    [4100.000, 4150.000) = 0 
    [4150.000, 4200.000) = 0 
    [4200.000, 4250.000) = 0 
    [4250.000, 4300.000) = 0 
    [4300.000, 4350.000) = 0 
    [4350.000, 4400.000) = 0 
    [4400.000, 4450.000) = 1 
    [4450.000, 4500.000) = 1 
    [4500.000, 4550.000) = 2 
    [4550.000, 4600.000) = 2 
    [4600.000, 4650.000) = 1 

  Percentiles, us/op:
      p(0.0000) =   3963.135 us/op
     p(50.0000) =   4492.141 us/op
     p(90.0000) =   4622.717 us/op
     p(95.0000) =   4627.101 us/op
     p(99.0000) =   4627.101 us/op
     p(99.9000) =   4627.101 us/op
     p(99.9900) =   4627.101 us/op
     p(99.9990) =   4627.101 us/op
     p(99.9999) =   4627.101 us/op
    p(100.0000) =   4627.101 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance
# Parameters: (classCount = 20, valueCount = 1000000)

# Run progress: 86.36% complete, ETA 00:00:02
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 12110.730 us/op
# Warmup Iteration   2: 11935.127 us/op
# Warmup Iteration   3: 6849.403 us/op
# Warmup Iteration   4: 3640.788 us/op
# Warmup Iteration   5: 3645.331 us/op
# Warmup Iteration   6: 4280.942 us/op
# Warmup Iteration   7: 4633.296 us/op
# Warmup Iteration   8: 4749.408 us/op
# Warmup Iteration   9: 4469.080 us/op
# Warmup Iteration  10: 4505.637 us/op
Iteration   1: 4937.089 us/op
Iteration   2: 4547.925 us/op
Iteration   3: 5041.971 us/op
Iteration   4: 5033.751 us/op
Iteration   5: 5020.489 us/op
Iteration   6: 5015.870 us/op
Iteration   7: 4369.379 us/op
Iteration   8: 4381.204 us/op
Iteration   9: 4323.227 us/op
Iteration  10: 4818.857 us/op


Result "dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance":
  N = 10
  mean =   4748.976 ±(99.9%) 465.494 us/op

  Histogram, us/op:
    [4300.000, 4350.000) = 1 
    [4350.000, 4400.000) = 2 
    [4400.000, 4450.000) = 0 
    [4450.000, 4500.000) = 0 
    [4500.000, 4550.000) = 1 
    [4550.000, 4600.000) = 0 
    [4600.000, 4650.000) = 0 
    [4650.000, 4700.000) = 0 
    [4700.000, 4750.000) = 0 
    [4750.000, 4800.000) = 0 
    [4800.000, 4850.000) = 1 
    [4850.000, 4900.000) = 0 
    [4900.000, 4950.000) = 1 
    [4950.000, 5000.000) = 0 
    [5000.000, 5050.000) = 4 

  Percentiles, us/op:
      p(0.0000) =   4323.227 us/op
     p(50.0000) =   4877.973 us/op
     p(90.0000) =   5041.149 us/op
     p(95.0000) =   5041.971 us/op
     p(99.0000) =   5041.971 us/op
     p(99.9000) =   5041.971 us/op
     p(99.9900) =   5041.971 us/op
     p(99.9990) =   5041.971 us/op
     p(99.9999) =   5041.971 us/op
    p(100.0000) =   5041.971 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: rays.benchmarks.RaysBenchmark.benchmarkExistential
# Parameters: (size = 1000)

# Run progress: 90.91% complete, ETA 00:00:01
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 383758.969 us/op
# Warmup Iteration   2: 71535.851 us/op
# Warmup Iteration   3: 53728.276 us/op
# Warmup Iteration   4: 53671.901 us/op
# Warmup Iteration   5: 63626.975 us/op
# Warmup Iteration   6: 51613.028 us/op
# Warmup Iteration   7: 51609.362 us/op
# Warmup Iteration   8: 57500.343 us/op
# Warmup Iteration   9: 62509.889 us/op
# Warmup Iteration  10: 59363.309 us/op
Iteration   1: 48018.425 us/op
Iteration   2: 47007.461 us/op
Iteration   3: 49499.696 us/op
Iteration   4: 48869.461 us/op
Iteration   5: 47449.661 us/op
Iteration   6: 47201.833 us/op
Iteration   7: 47670.341 us/op
Iteration   8: 47737.409 us/op
Iteration   9: 47509.436 us/op
Iteration  10: 47479.935 us/op


Result "rays.benchmarks.RaysBenchmark.benchmarkExistential":
  N = 10
  mean =  47844.366 ±(99.9%) 1168.583 us/op

  Histogram, us/op:
    [47000.000, 47250.000) = 2 
    [47250.000, 47500.000) = 2 
    [47500.000, 47750.000) = 3 
    [47750.000, 48000.000) = 0 
    [48000.000, 48250.000) = 1 
    [48250.000, 48500.000) = 0 
    [48500.000, 48750.000) = 0 
    [48750.000, 49000.000) = 1 
    [49000.000, 49250.000) = 0 
    [49250.000, 49500.000) = 1 
    [49500.000, 49750.000) = 0 

  Percentiles, us/op:
      p(0.0000) =  47007.461 us/op
     p(50.0000) =  47589.889 us/op
     p(90.0000) =  49436.673 us/op
     p(95.0000) =  49499.696 us/op
     p(99.0000) =  49499.696 us/op
     p(99.9000) =  49499.696 us/op
     p(99.9900) =  49499.696 us/op
     p(99.9990) =  49499.696 us/op
     p(99.9999) =  49499.696 us/op
    p(100.0000) =  49499.696 us/op


# JMH version: 1.37
# VM version: JDK 17.0.8, OpenJDK 64-Bit Server VM, 17.0.8+7-jvmci-22.3-b22
# VM invoker: /Users/mbovel/Library/Caches/Coursier/arc/https/github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.3/graalvm-ce-java17-darwin-amd64-22.3.3.tar.gz/graalvm-ce-java17-22.3.3/Contents/Home/bin/java
# VM options: -XX:ThreadPriorityPolicy=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCIProduct -XX:JVMCIThreadsPerNativeLibraryRuntime=1 -XX:-UnlockExperimentalVMOptions
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 10 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: rays.benchmarks.RaysBenchmark.benchmarkInheritance
# Parameters: (size = 1000)

# Run progress: 95.45% complete, ETA 00:00:00
# Fork: 1 of 1
OpenJDK 64-Bit Server VM warning: -XX:ThreadPriorityPolicy=1 may require system level permission, e.g., being the root user. If the necessary permission is not possessed, changes to priority will be silently ignored.
# Warmup Iteration   1: 359648.570 us/op
# Warmup Iteration   2: 59154.140 us/op
# Warmup Iteration   3: 52959.267 us/op
# Warmup Iteration   4: 50543.612 us/op
# Warmup Iteration   5: 49344.285 us/op
# Warmup Iteration   6: 59405.566 us/op
# Warmup Iteration   7: 49623.448 us/op
# Warmup Iteration   8: 49327.031 us/op
# Warmup Iteration   9: 48311.016 us/op
# Warmup Iteration  10: 45854.868 us/op
Iteration   1: 46132.055 us/op
Iteration   2: 46808.721 us/op
Iteration   3: 43777.023 us/op
Iteration   4: 45339.805 us/op
Iteration   5: 44487.472 us/op
Iteration   6: 44051.283 us/op
Iteration   7: 44470.352 us/op
Iteration   8: 44834.196 us/op
Iteration   9: 47830.883 us/op
Iteration  10: 51019.663 us/op


Result "rays.benchmarks.RaysBenchmark.benchmarkInheritance":
  N = 10
  mean =  45875.145 ±(99.9%) 3351.431 us/op

  Histogram, us/op:
    [43000.000, 43500.000) = 0 
    [43500.000, 44000.000) = 1 
    [44000.000, 44500.000) = 3 
    [44500.000, 45000.000) = 1 
    [45000.000, 45500.000) = 1 
    [45500.000, 46000.000) = 0 
    [46000.000, 46500.000) = 1 
    [46500.000, 47000.000) = 1 
    [47000.000, 47500.000) = 0 
    [47500.000, 48000.000) = 1 
    [48000.000, 48500.000) = 0 
    [48500.000, 49000.000) = 0 
    [49000.000, 49500.000) = 0 
    [49500.000, 50000.000) = 0 
    [50000.000, 50500.000) = 0 
    [50500.000, 51000.000) = 0 
    [51000.000, 51500.000) = 1 

  Percentiles, us/op:
      p(0.0000) =  43777.023 us/op
     p(50.0000) =  45087.001 us/op
     p(90.0000) =  50700.785 us/op
     p(95.0000) =  51019.663 us/op
     p(99.0000) =  51019.663 us/op
     p(99.9000) =  51019.663 us/op
     p(99.9900) =  51019.663 us/op
     p(99.9990) =  51019.663 us/op
     p(99.9999) =  51019.663 us/op
    p(100.0000) =  51019.663 us/op


# Run complete. Total time: 00:00:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                                                   (classCount)  (size)  (valueCount)  Mode  Cnt      Score      Error  Units
dispatch.benchmarks.DispatchBenchmark.benchmarkExistential             2     N/A       1000000    ss   10   6506.118 ± 1053.109  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkExistential             4     N/A       1000000    ss   10   5525.031 ±  396.819  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkExistential             6     N/A       1000000    ss   10   7781.946 ± 3805.077  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkExistential             8     N/A       1000000    ss   10   7061.869 ±  504.971  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkExistential            10     N/A       1000000    ss   10  10108.111 ± 2385.174  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkExistential            12     N/A       1000000    ss   10   9603.141 ± 1058.805  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkExistential            14     N/A       1000000    ss   10   9235.649 ± 1265.568  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkExistential            16     N/A       1000000    ss   10   9234.350 ± 1317.438  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkExistential            18     N/A       1000000    ss   10   9565.489 ±  551.335  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkExistential            20     N/A       1000000    ss   10  11068.094 ±  877.089  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance             2     N/A       1000000    ss   10   3291.648 ±  624.587  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance             4     N/A       1000000    ss   10   2680.704 ±  140.323  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance             6     N/A       1000000    ss   10   3103.471 ±  237.079  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance             8     N/A       1000000    ss   10   3668.858 ±  224.649  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance            10     N/A       1000000    ss   10   4486.896 ±  243.739  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance            12     N/A       1000000    ss   10   4625.075 ±  385.465  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance            14     N/A       1000000    ss   10   4656.998 ±  768.357  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance            16     N/A       1000000    ss   10   4253.577 ±  421.142  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance            18     N/A       1000000    ss   10   4386.406 ±  368.065  us/op
dispatch.benchmarks.DispatchBenchmark.benchmarkInheritance            20     N/A       1000000    ss   10   4748.976 ±  465.494  us/op
rays.benchmarks.RaysBenchmark.benchmarkExistential                   N/A    1000           N/A    ss   10  47844.366 ± 1168.583  us/op
rays.benchmarks.RaysBenchmark.benchmarkInheritance                   N/A    1000           N/A    ss   10  45875.145 ± 3351.431  us/op

Benchmark result is saved to ../benchmark-results/scala.json
